@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Yeni Blog Girişi</h1>
<br />
@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(X => X.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(X => X.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(X => X.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Kategori")
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
    @*@Html.ValidationMessageFor(x => x.CategoryID, "", new { @class = "text-danger" })*@
    <br />
    @Html.Label("Blog İçerik")
    @Html.TextAreaFor(X => X.BlogContent, 15, 3, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
    <br />
    <button class="btn btn-info">Ekle</button>
}

